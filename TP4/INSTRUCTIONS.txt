1) DANS PGADMIN, CRÉER UNE BASE DE DONNÉES NOMMÉE "neflixbd" en minuscules.
2) DANS PGADMIN, CLIQUE DROIT SUR "netflixbd" ET CLIQUER SUR "Query Tool".
3) EFFECTUER LA REQUÊTE SUIVANTE DANS LE "Query Tool": "CREATE USER admin encrypted password 'admin'; GRANT ALL PRIVILEGES ON DATABASE netflixdb to admin;".


4) OUVRIR UN TERMINAL DANS LE DOSSIER "server" qui existe dans le dossier "TP4".
5) EXECUTER LA COMMANDE "npm install" DANS LE DOSSIER "server".

6) OUVRIR UN TERMINAL DANS LE DOSSIER "client" qui existe dans le dossier "TP4".
7) EXECUTER LA COMMANDE "npm install" DANS LE DOSSIER "client".

8) EXECUTER LA COMMANDE "npm start" DANS LE DOSSIER "server".
9) EXECUTER LA COMMANDE "npm start" DANS LE DOSSIER "client".

10) VOTRE BROWSER DEVRAIT S'OUVRIR ET AFFICHER L'APPLICATION, SI CE N'EST PAS LE CAS, NAVIGUEZ VERS L'ADRESSE : "http://localhost:4200/home" DANS VOTRE FURETEUR.
11) CLIQUEZ SUR "Initialiser la base de données"
12) POUR VOUS CONNECTER EN TANT QU'ADMINISTRATEUR, UTILISEZ LES CREDENTIALS SUIVANTS:
        Adresse courriel: admin@admin.ca
        Mot de passe: admin
   POUR VOUS CONNECTER EN TANT QU'UTILISATEUR, UTILISEZ LES CREDENTIALS SUIVANTS:
        Adresse courriel: foo@polymtl.ca
        Mot de passe: poly123

            
TO DO:

Front end:
        1)  Visionner un film
                a) Lorsqu'on clique sur "Visionner" dans le "view-movie-modal", ca dirige vers un component "Visionnement" où on visionne le film.
                b) Envoyer une requête au serveur pour le fichier vidéo.
                c) Dans le component "Visionnement", on crée les boutons "Jouer du début", "Stop" et bouton "Retour au movie-grid".
                d) Lorsque le film commence, un timer démarre, lorsqu'on clique sur "Stop" ou sur "Retour au movie-grid", le timer s'arrête 
                   et on capture le nombre de secondes de visionnement dans une variable "stop_time". si c'est la deuxième fois qu'on arrête
                   le film, on additionne le temps du timer à l'ancien "stop-time".
                e) Lorsque le "stop_time" est capturé, ceci débloque un bouton "Reprendre où vous avez arrêté" dans le component de "Visionnement".
                f) Envoyer le "stop_time" au serveur".
                g) Lorsque le bouton "Reprendre où vous avez arrêté" est cliqué, envoyer une requête au serveur pour avoir le "stop-time".
                
        2) Retirer le code de sorting des rows dans le movie-grid, ce n'était pas demandé dans l'énoncé du TP.
        3) Envoyer les requête de suppression ou de modification de film lorsque les boutons correspondants sont cliqués dans le "movie-grid".
        4) Renvoyer une requête getMovies pour mettre à jour le movie-grid lorsqu'un film est modifier ou supprimer.
        4) Créer un modal pour afficher un membre avec ses informations bancaire lorsqu'on clique sur "Voir membre" dans le "members-grid".


Back end:

        1) Recevoir la requête pour supprimer un film dans la bd.
        2) Recevoir la requête pour modifier un film dans la bd.
        3) Stocker les fichiers vidéos des film et répondre à la requête du client pour un film, si la requête viens d'un membre "pay per view", mettre à jour le nombre de visionnement dans la table Membre_payperview.
        4) Recevoir le stop-time et l'insérer dans la table "Visionnement".
        5) Recevoir la requête de stop-time et envoyer la réponse.
        6) Créer une fonction séparée de "populateDB" pour insérer des commandes de livraison dans la bd.
        7) Créer la fonction pour appeler l'API de google pour calculer la distance entre un code postal et le pavillon Lassonde.
        8) Créer le trigger pour calculer le prix de livraison et l'insérer dans la table livraisons.
        9) Implémenter toute les requêtes demandées dans le TP.
        10) Retirer toute les références à HotelDB.
        11) Supprimer des fichier dans le dossier "out".
        12) Uniformiser les classes d'objet avec le front-end.


                
